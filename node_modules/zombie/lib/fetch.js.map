{"version":3,"sources":["fetch.js"],"names":[],"mappings":"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","file":"fetch.js","sourcesContent":["const _       = require('lodash');\nconst HTTP    = require('http');\nconst Promise = require('bluebird');\nconst Stream  = require('stream');\nconst URL     = require('url');\nconst Zlib    = require('zlib');\n\n\n// Decompress stream based on content and transfer encoding headers.\nfunction decompressStream(stream, headers) {\n  const transferEncoding  = headers.get('Transfer-Encoding');\n  const contentEncoding   = headers.get('Content-Encoding');\n  if (contentEncoding === 'deflate' || transferEncoding === 'deflate')\n    return stream.pipe( Zlib.createInflate() );\n  if (contentEncoding === 'gzip' || transferEncoding === 'gzip')\n    return stream.pipe( Zlib.createGunzip() );\n  return stream;\n}\n\n\n// https://fetch.spec.whatwg.org/#headers-class\nclass Headers {\n\n  constructor(init) {\n    this._headers = [];\n    if (init instanceof Headers)\n      for (let [name, value] of init)\n        this.append(name, value);\n    else if (init instanceof Array)\n      for (let [name, value] of init)\n        this.append(name, value);\n    else if (init instanceof Object)\n      _.each(init, (value, name)=> {\n        this.append(name, value);\n      });\n  }\n\n  append(name, value) {\n    const caseInsensitive = name.toLowerCase();\n    const castValue       = String(value).replace(/\\r\\n/g, '');\n    this._headers.push([caseInsensitive, castValue]);\n  }\n\n  delete(name) {\n    const caseInsensitive = name.toLowerCase();\n    this._headers = this._headers.filter(header => header[0] !== caseInsensitive);\n  }\n\n  get(name) {\n    const caseInsensitive = name.toLowerCase();\n    const header = _.find(this._headers, header => header[0] === caseInsensitive);\n    return header ? header[1] : null;\n  }\n\n  getAll(name) {\n    const caseInsensitive = name.toLowerCase();\n    return this._headers\n      .filter(header => header[0] === caseInsensitive)\n      .map(header => header[1]);\n  }\n\n  has(name) {\n    const caseInsensitive = name.toLowerCase();\n    const header = _.find(this._headers, header => header[0] === caseInsensitive);\n    return !!header;\n  }\n\n  set(name, value) {\n    const caseInsensitive = name.toLowerCase();\n    const castValue       = String(value).replace(/\\r\\n/g, '');\n    let   replaced        = false;\n    this._headers = this._headers.reduce((headers, [name, value])=> {\n      if (name !== caseInsensitive)\n        headers.push([name, value]);\n      else if (!replaced) {\n        headers.push([name, castValue]);\n        replaced = true;\n      }\n      return headers;\n    }, []);\n\n    if (!replaced)\n      this.append(name, value);\n  }\n\n  [Symbol.iterator]() {\n    return this._headers[Symbol.iterator]();\n  }\n\n  valueOf() {\n    return this._headers.map(([name, value])=> `${name}: ${value}`);\n  }\n\n  toString() {\n    return this.valueOf().join('\\n');\n  }\n\n  toObject() {\n    const object = Object.create(null);\n    for (let [name, value] of this._headers)\n      object[name] = value;\n    return object;\n  }\n\n}\n\n\nclass FormData {\n\n  constructor() {\n    this._entries = [];\n  }\n\n  append(name, value, filename) {\n    // TODO add support for files\n    this._entries.push([name, value]);\n  }\n\n  set(name, value, filename) {\n    this.delete(name);\n    this.append(name, value, filename);\n  }\n\n  delete(name) {\n    this._entries = this._entries.filter(entry => entry[0] !== name);\n  }\n\n  get(name) {\n    const entry = _.find(this._entries, entry => entry[0] === name);\n    return entry ? entry[1] : null;\n  }\n\n  getAll(name) {\n    return this._entries\n      .filter(entry => entry[0] === name)\n      .map(entry => entry[1]);\n  }\n\n  has(name) {\n    const entry = _.find(this._entries, entry => entry[0] === name);\n    return !!entry;\n  }\n\n  [Symbol.iterator]() {\n    return this._entries[Symbol.iterator]();\n  }\n\n  get length() {\n    return this._entries.length;\n  }\n\n  _asStream(boundary) {\n    const iterator  = this._entries[Symbol.iterator]();\n    const stream    = new Stream.Readable();\n    stream._read = function() {\n      const next = iterator.next();\n      if (next.value) {\n        const [name, value] = next.value;\n        this.push(`--${boundary}\\r\\n`);\n        if (value.read) {\n          const buffer = value.read();\n          this.push(`Content-Disposition: form-data; name=\\\"${name}\\\"; filename=\\\"${value}\\\"\\r\\n`);\n          this.push(`Content-Type: ${value.mime || 'application/octet-stream'}\\r\\n`);\n          this.push(`Content-Length: ${buffer.length}\\r\\n\\r\\n`);\n          this.push(buffer);\n        } else {\n          const text = value.toString('utf-8');\n          this.push(`Content-Disposition: form-data; name=\\\"${name}\\\"\\r\\n`);\n          this.push(`Content-Type: text/plain; charset=utf8\\r\\n\\r\\n`);\n          this.push(`Content-Length: ${text.length}\\r\\n\\r\\n`);\n          this.push(text);\n        }\n        this.push('\\r\\n');\n      }\n      if (next.done) {\n        this.push(`--${boundary}--`);\n        this.push(null);\n      }\n    };\n    return stream;\n  }\n}\n\n\nclass Body {\n\n  constructor(bodyInit) {\n    if (bodyInit instanceof Body) {\n      this._stream = bodyInit._stream;\n      this._contentType = bodyInit.headers.get('Content-Type');\n    } else if (bodyInit instanceof Stream.Readable) {\n      // Request + Replay start streaming immediately, so we need this trick to\n      // buffer HTTP responses; this is likely a bug in Replay\n      this._stream = new Stream.PassThrough();\n      this._stream.pause();\n      bodyInit.pipe(this._stream);\n    } else if (typeof bodyInit === 'string' || bodyInit instanceof String) {\n      this._stream = new Stream.Readable();\n      this._stream._read = function() {\n        this.push(bodyInit);\n        this.push(null);\n      };\n      this._contentType = 'text/plain;charset=UTF-8';\n    } else if (bodyInit instanceof FormData && bodyInit.length) {\n      const boundary = `${new Date().getTime()}.${Math.random()}`;\n      this._contentType = `multipart/form-data;boundary=${boundary}`;\n      this._stream   = bodyInit._asStream(boundary);\n    } else if (bodyInit instanceof FormData)\n      this._contentType = 'text/plain;charset=UTF-8';\n    else if (bodyInit)\n      throw new TypeError('This body type not yet supported');\n\n    this._bodyUsed  = false;\n    this.body       = null;\n  }\n\n  get bodyUsed() {\n    return this._bodyUsed;\n  }\n\n  async arrayBuffer() {\n    this.body         = await this._consume();\n    const arrayBuffer = new Uint8Array(this.body.length);\n    for (let i = 0; i < this.body.length; ++i)\n      arrayBuffer[i] = this.body[i];\n    return arrayBuffer;\n  }\n\n  async blob() {\n    throw new Error('Not implemented yet');\n  }\n\n  async formData() {\n    const buffer      = await this._consume();\n    const contentType = this.headers.get('Content-Type') || '';\n    const mimeType    = contentType.split(';')[0];\n    switch (mimeType) {\n      case 'multipart/form-data': {\n        throw new Error('Not implemented yet');\n      }\n      case 'application/x-www-form-urlencoded': {\n        throw new Error('Not implemented yet');\n      }\n      default: {\n        throw new TypeError(`formData does not support MIME type ${mimeType}`);\n      }\n    }\n  }\n\n  async json() {\n    const buffer  = await this._consume();\n    this.body     = buffer.toString('utf-8');\n    return JSON.parse(this.body);\n  }\n\n  async text() {\n    const buffer      = await this._consume();\n    this.body         = buffer.toString();\n    return this.body;\n  }\n\n\n  // -- Implementation details --\n\n  async _consume() {\n    if (this._bodyUsed)\n      throw new TypeError('Body already consumed');\n    this._bodyUsed = true;\n\n    // When Request has no body, _stream is typically null\n    if (!this._stream)\n      return null;\n    // When Response has no body, we get stream that's no longer readable\n    if (!this._stream.readable)\n      return new Buffer('');\n\n    const decompressed = decompressStream(this._stream, this.headers);\n\n    return await new Promise((resolve)=> {\n      const buffers = [];\n      decompressed\n        .on('data', (buffer)=> {\n          buffers.push(buffer);\n        })\n        .on('end', ()=> {\n          resolve(Buffer.concat(buffers));\n        })\n        .on('error', ()=> {\n          resolve(Buffer.concat(buffers));\n        })\n        .resume();\n    });\n  }\n\n}\n\n\n// https://fetch.spec.whatwg.org/#request-class\nclass Request extends Body {\n\n  constructor(input, init) {\n    const method = ((init ? init.method : input.method) || 'GET').toUpperCase();\n    let bodyInit = null;\n\n    if (input instanceof Request && input._stream) {\n      if (input._bodyUsed)\n        throw new TypeError('Request body already used');\n      bodyInit        = input;\n      input._bodyUsed = true;\n    }\n\n    if (init && init.body) {\n      if (method === 'GET' || method === 'HEAD')\n        throw new TypeError('Cannot include body with GET/HEAD request');\n      bodyInit = init.body;\n    }\n    super(bodyInit);\n\n    if (typeof input === 'string' || input instanceof String)\n      this.url = URL.format(input);\n    else if (input instanceof Request)\n      this.url = input.url;\n    if (!this.url)\n      throw new TypeError('Input must be string or another Request');\n\n    this.method   = method;\n    this.headers  = new Headers(init ? init.headers : input.headers);\n    if (this._contentType && !this.headers.has('Content-Type'))\n      this.headers.set('Content-Type', this._contentType);\n\n    // Default redirect is follow, also treat manual as follow\n    this.redirect = init && init.redirect;\n    if (this.redirect !== 'error')\n      this.redirect = 'follow';\n    this._redirectCount = 0;\n  }\n\n  // -- From Request interface --\n\n  clone() {\n    if (this._bodyUsed)\n      throw new TypeError('This Request body has already been used');\n    throw new Error('Not implemented yet');\n  }\n\n\n  // -- From Body interface --\n\n}\n\n\n// https://fetch.spec.whatwg.org/#response-class\nclass Response extends Body {\n\n  constructor(bodyInit, responseInit) {\n    super(bodyInit);\n    if (responseInit) {\n      if (responseInit.status < 200 || responseInit.status > 599)\n        throw new RangeError(`Status code ${responseInit.status} not in range`);\n      const statusText = responseInit.statusText || HTTP.STATUS_CODES[responseInit.status] || 'Unknown';\n      if (!/^[^\\n\\r]+$/.test(statusText))\n        throw new TypeError(`Status text ${responseInit.statusText} not valid format`);\n\n      this._url       = URL.format(responseInit.url || '');\n      this.type       = 'default';\n      this.status     = responseInit.status;\n      this.statusText = statusText;\n      this.headers    = new Headers(responseInit.headers);\n    } else {\n      this.type       = 'error';\n      this.status     = 0;\n      this.statusText = '';\n      this.headers    = new Headers();\n    }\n    if (this._contentType && !this.headers.has('Content-Type'))\n      this.headers.set('Content-Type', this._contentType);\n  }\n\n  get url() {\n    return (this._url || '').split('#')[0];\n  }\n\n  get ok() {\n    return (this.status >= 200 && this.status <= 299);\n  }\n\n  clone() {\n    if (this._bodyUsed)\n      throw new TypeError('This Response body has already been used');\n    throw new Error('Not implemented yet');\n  }\n\n  static error() {\n    return new Response();\n  }\n\n  static redirect(url, status = 302) {\n    const parsedURL = URL.parse(url);\n    if ([301, 302, 303, 307, 308].indexOf(status) < 0)\n      throw new RangeError(`Status code ${status} not valid redirect code`);\n    const statusText = HTTP.STATUS_CODES[status];\n    const response = new Response(null, { status, statusText });\n    response.headers.set('Location', URL.format(parsedURL));\n    return response;\n  }\n}\n\n\nmodule.exports = {\n  Headers,\n  FormData,\n  Request,\n  Response\n};\n"],"sourceRoot":"/source/"}