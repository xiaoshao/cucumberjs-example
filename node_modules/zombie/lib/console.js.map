{"version":3,"sources":["console.js"],"names":[],"mappings":"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","file":"console.js","sourcesContent":["// Implements console.log, console.error, console.time, et al and emits a\n// console event for each output.\n\n\nconst { format, inspect } = require('util');\n\n\nmodule.exports = class Console {\n\n  constructor(browser) {\n    this.browser = browser;\n  }\n\n  assert(truth, ...args) {\n    if (truth)\n      return;\n    const formatted = format('', ...args);\n    const message   = `Assertion failed: ${formatted || 'false'}`;\n    this.browser.emit('console', 'error', message);\n    throw new Error(message);\n  }\n\n  count(name) {\n    if (!this.counters)\n      this.counters = {};\n    if (!this.counters[name])\n    this.counters[name] = 0;\n    this.counters[name]++;\n    const message = `${name}: ${this.counters[name]}`;\n    this.browser.emit('console', 'log', message);\n  }\n\n  debug(...args) {\n    this.browser.emit('console', 'debug', format(...args));\n  }\n\n  error(...args) {\n    this.browser.emit('console', 'error', format(...args));\n  }\n\n  group() {\n  }\n  groupCollapsed() {\n  }\n  groupEnd() {\n  }\n\n  dir(object) {\n    this.browser.emit('console', 'log', inspect(object));\n  }\n\n  info(...args) {\n    this.browser.emit('console', 'log', format(...args));\n  }\n\n  log(...args) {\n    this.browser.emit('console', 'log', format(...args));\n  }\n\n  time(name) {\n    if (!this.timers)\n      this.timers = {};\n    this.timers[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (this.timers) {\n      const start = this.timers[name];\n      delete this.timers[name];\n      const message = `${name}: ${Date.now() - start}ms`;\n      this.browser.emit('console', 'log', message);\n    }\n  }\n\n  trace() {\n    const error = new Error();\n    const stack = error.stack.split('\\n');\n    stack[0] = 'console.trace()';\n    const message = stack.join('\\n');\n    this.browser.emit('console', 'trace', message);\n  }\n\n  warn(...args) {\n    this.browser.emit('console', 'log', format(...args));\n  }\n\n};\n\n"],"sourceRoot":"/source/"}