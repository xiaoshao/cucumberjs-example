{"version":3,"sources":["pipeline.js"],"names":[],"mappings":"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","file":"pipeline.js","sourcesContent":["const _             = require('lodash');\nconst assert        = require('assert');\nconst DOM           = require('./dom');\nconst Fetch         = require('./fetch');\nconst File          = require('fs');\nconst { Headers }   = require('./fetch');\nconst { isArray }   = require('util');\nconst Path          = require('path');\nconst Request       = require('request');\nconst URL           = require('url');\nconst Utils         = require('jsdom/lib/jsdom/utils');\n\n\n// Pipeline is sequence of request/response handlers that are used to prepare a\n// request, make the request, and process the response.\nclass Pipeline extends Array {\n\n  constructor(browser) {\n    super();\n    this._browser = browser;\n    for (let handler of Pipeline._default)\n      this.push(handler);\n  }\n\n  async _fetch(input, init) {\n    const request   = new Fetch.Request(input, init);\n    const browser   = this._browser;\n    browser.emit('request', request);\n\n    try {\n\n      const response    = await this._runPipeline(request);\n      response.time     = Date.now();\n      response.request  = request;\n      browser.emit('response', request, response);\n      return response;\n\n    } catch (error) {\n      browser._debug('Resource error', error.stack);\n      throw new TypeError(error.message);\n    }\n  }\n\n  async _runPipeline(request) {\n    const browser           = this._browser;\n    const requestHandlers   = this.filter(fn => fn.length === 2).concat(Pipeline.makeHTTPRequest);\n    const responseHandlers  = this.filter(fn => fn.length === 3);\n\n    let response;\n    for (let requestHandler of requestHandlers) {\n      response = await requestHandler(browser, request);\n      if (response)\n        break;\n    }\n    for (let responseHandler of responseHandlers) {\n      response = await responseHandler(browser, request, response);\n      assert(response, 'Response handler must return a response');\n    }\n    return response;\n  }\n\n\n  // -- Handlers --\n\n  // Add a request or response handler.  This handler will only be used by this\n  // pipeline instance (browser).\n  addHandler(handler) {\n    assert(handler.call, 'Handler must be a function');\n    assert(handler.length === 2 || handler.length === 3, 'Handler function takes 2 (request handler) or 3 (reponse handler) arguments');\n    this.push(handler);\n  }\n\n  // Add a request or response handler.  This handler will be used by any new\n  // pipeline instance (browser).\n  static addHandler(handler) {\n    assert(handler.call, 'Handler must be a function');\n    assert(handler.length === 2 || handler.length === 3, 'Handler function takes 2 (request handler) or 3 (response handler) arguments');\n    this._default.push(handler);\n  }\n\n\n  // -- Prepare request --\n\n  // This handler normalizes the request URL.\n  //\n  // It turns relative URLs into absolute URLs based on the current document URL\n  // or base element, or if no document open, based on browser.site property.\n  static normalizeURL(browser, request) {\n    if (browser.document)\n    // Resolve URL relative to document URL/base, or for new browser, using\n    // Browser.site\n      request.url = DOM.resourceLoader.resolve(browser.document, request.url);\n    else\n      request.url = Utils.resolveHref(browser.site || 'http://localhost', request.url);\n  }\n\n\n  // This handler mergers request headers.\n  //\n  // It combines headers provided in the request with custom headers defined by\n  // the browser (user agent, authentication, etc).\n  //\n  // It also normalizes all headers by down-casing the header names.\n  static mergeHeaders(browser, request) {\n    if (browser.headers)\n      _.each(browser.headers, (value, name)=> {\n        request.headers.append(name, browser.headers[name]);\n      });\n    if (!request.headers.has('User-Agent'))\n      request.headers.set('User-Agent', browser.userAgent);\n\n    // Always pass Host: from request URL\n    const { host } = URL.parse(request.url);\n    request.headers.set('Host', host);\n\n    // HTTP Basic authentication\n    const authenticate = { host, username: null, password: null };\n    browser.emit('authenticate', authenticate);\n    const { username, password } = authenticate;\n    if (username && password) {\n      browser.log(`Authenticating as ${username}:${password}`);\n      const base64 = new Buffer(`${username}:${password}`).toString('base64');\n      request.headers.set('authorization',  `Basic ${base64}`);\n    }\n  }\n\n\n  // -- Retrieve actualy resource --\n\n  // Used to perform HTTP request (also supports file: resources).  This is always\n  // the last request handler.\n  static async makeHTTPRequest(browser, request) {\n    const { url } = request;\n    const { protocol, hostname, pathname } = URL.parse(url);\n\n    if (protocol === 'file:') {\n\n      // If the request is for a file:// descriptor, just open directly from the\n      // file system rather than getting node's http (which handles file://\n      // poorly) involved.\n      if (request.method !== 'GET')\n        return new Fetch.Response('', { url, status: 405 });\n\n      const filename = Path.normalize(decodeURI(pathname));\n      const exists   = File.existsSync(filename);\n      if (exists) {\n        const stream = File.createReadStream(filename);\n        return new Fetch.Response(stream, { url, status: 200 });\n      } else\n        return new Fetch.Response('', { url, status: 404 });\n\n    } else {\n\n      // We're going to use cookies later when recieving response.\n      const { cookies }   = browser;\n      const cookieHeader  = cookies.serialize(hostname, pathname);\n      if (cookieHeader)\n        request.headers.append('Cookie', cookieHeader);\n\n      const buffer      = /^GET|HEAD$/.test(request.method) ? null : await request._consume();\n      const httpRequest = new Request({\n        method:         request.method,\n        uri:            request.url,\n        headers:        request.headers.toObject(),\n        proxy:          browser.proxy,\n        body:           buffer,\n        jar:            false,\n        followRedirect: false,\n        strictSSL:      browser.strictSSL,\n        localAddress:   browser.localAddress || 0\n      });\n      return await new Promise(function(resolve, reject) {\n        httpRequest\n          .on('response', (response)=> {\n            // Request returns an object where property name is header name,\n            // property value is either header value, or an array if header sent\n            // multiple times (e.g. `Set-Cookie`).\n            const arrayOfHeaders = _.reduce(response.headers, (headers, value, name)=> {\n              if (isArray(value))\n                for (let item of value)\n                  headers.push([name, item]);\n              else\n                headers.push([name, value]);\n              return headers;\n            }, []);\n\n            resolve(new Fetch.Response(response, {\n              url:        request.url,\n              status:     response.statusCode,\n              headers:    new Headers(arrayOfHeaders)\n            }));\n          })\n          .on('error', reject);\n      });\n    }\n\n  }\n\n\n  // -- Handle response --\n\n  static handleHeaders(browser, request, response) {\n    response.headers = new Headers(response.headers);\n    return response;\n  }\n\n  static handleCookies(browser, request, response) {\n    // Set cookies from response: call update() with array of headers\n    const { hostname, pathname } = URL.parse(request.url);\n    const newCookies = response.headers.getAll('Set-Cookie');\n    browser.cookies.update(newCookies, hostname, pathname);\n    return response;\n  }\n\n  static async handleRedirect(browser, request, response) {\n    const { status }  = response;\n    if (status === 301 || status === 302 || status === 303 || status === 307 || status === 308) {\n      if (request.redirect === 'error')\n        return Fetch.Response.error();\n\n      const location = response.headers.get('Location');\n      if (location === null)\n        return response;\n\n      if (request._redirectCount >= 20)\n        return Fetch.Response.error();\n\n      browser.emit('redirect', request, response, location);\n      ++request._redirectCount;\n      if (status !== 307) {\n        request.method = 'GET';\n        request.headers.delete('Content-Type');\n        request.headers.delete('Content-Length');\n        request.headers.delete('Content-Transfer-Encoding');\n      }\n\n      // This request is referer for next\n      request.headers.set('Referer', request.url);\n      request.url = Utils.resolveHref(request.url, location);\n      return await browser.pipeline._runPipeline(request);\n    } else\n      return response;\n  }\n\n}\n\n\n// The default pipeline.  All new pipelines are instantiated with this set of\n// handlers.\nPipeline._default = [\n  Pipeline.normalizeURL,\n  Pipeline.mergeHeaders,\n  Pipeline.handleHeaders,\n  Pipeline.handleCookies,\n  Pipeline.handleRedirect\n];\n\nmodule.exports = Pipeline;\n\n"],"sourceRoot":"/source/"}